// node_modules/livewire-sortable/dist/livewire-sortable.js
!function(e) {
  "function" == typeof define && define.amd ? define(e) : e();
}(function() {
  "use strict";
  var e, t = function(e2, t2) {
    return e2(t2 = { exports: {} }, t2.exports), t2.exports;
  }(function(e2, t2) {
    var r2;
    window, r2 = function() {
      return function(e3) {
        var t3 = {};
        function r3(n) {
          if (t3[n])
            return t3[n].exports;
          var o = t3[n] = { i: n, l: false, exports: {} };
          return e3[n].call(o.exports, o, o.exports, r3), o.l = true, o.exports;
        }
        return r3.m = e3, r3.c = t3, r3.d = function(e4, t4, n) {
          r3.o(e4, t4) || Object.defineProperty(e4, t4, { enumerable: true, get: n });
        }, r3.r = function(e4) {
          "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e4, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e4, "__esModule", { value: true });
        }, r3.t = function(e4, t4) {
          if (1 & t4 && (e4 = r3(e4)), 8 & t4)
            return e4;
          if (4 & t4 && "object" == typeof e4 && e4 && e4.__esModule)
            return e4;
          var n = /* @__PURE__ */ Object.create(null);
          if (r3.r(n), Object.defineProperty(n, "default", { enumerable: true, value: e4 }), 2 & t4 && "string" != typeof e4)
            for (var o in e4)
              r3.d(n, o, (function(t5) {
                return e4[t5];
              }).bind(null, o));
          return n;
        }, r3.n = function(e4) {
          var t4 = e4 && e4.__esModule ? function() {
            return e4.default;
          } : function() {
            return e4;
          };
          return r3.d(t4, "a", t4), t4;
        }, r3.o = function(e4, t4) {
          return Object.prototype.hasOwnProperty.call(e4, t4);
        }, r3.p = "", r3(r3.s = 44);
      }([function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(19);
        Object.keys(n).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return n[e4];
          } });
        });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(22), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(26);
        Object.defineProperty(t3, "closest", { enumerable: true, get: function() {
          return i(n).default;
        } });
        var o = r3(24);
        function i(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        Object.defineProperty(t3, "requestNextAnimationFrame", { enumerable: true, get: function() {
          return i(o).default;
        } });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(42), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(35), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(1);
        Object.defineProperty(t3, "Sensor", { enumerable: true, get: function() {
          return c(n).default;
        } });
        var o = r3(21);
        Object.defineProperty(t3, "MouseSensor", { enumerable: true, get: function() {
          return c(o).default;
        } });
        var i = r3(18);
        Object.defineProperty(t3, "TouchSensor", { enumerable: true, get: function() {
          return c(i).default;
        } });
        var s = r3(16);
        Object.defineProperty(t3, "DragSensor", { enumerable: true, get: function() {
          return c(s).default;
        } });
        var a = r3(14);
        Object.defineProperty(t3, "ForceTouchSensor", { enumerable: true, get: function() {
          return c(a).default;
        } });
        var l = r3(0);
        function c(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        Object.keys(l).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return l[e4];
          } });
        });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(37);
        Object.defineProperty(t3, "Announcement", { enumerable: true, get: function() {
          return a(n).default;
        } }), Object.defineProperty(t3, "defaultAnnouncementOptions", { enumerable: true, get: function() {
          return n.defaultOptions;
        } });
        var o = r3(34);
        Object.defineProperty(t3, "Focusable", { enumerable: true, get: function() {
          return a(o).default;
        } });
        var i = r3(32);
        Object.defineProperty(t3, "Mirror", { enumerable: true, get: function() {
          return a(i).default;
        } }), Object.defineProperty(t3, "defaultMirrorOptions", { enumerable: true, get: function() {
          return i.defaultOptions;
        } });
        var s = r3(28);
        function a(e4) {
          return e4 && e4.__esModule ? e4 : { default: e4 };
        }
        Object.defineProperty(t3, "Scrollable", { enumerable: true, get: function() {
          return a(s).default;
        } }), Object.defineProperty(t3, "defaultScrollableOptions", { enumerable: true, get: function() {
          return s.defaultOptions;
        } });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(38);
        Object.keys(n).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return n[e4];
          } });
        });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(39);
        Object.keys(n).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return n[e4];
          } });
        });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(43);
        Object.keys(n).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return n[e4];
          } });
        });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.default = class {
          constructor() {
            this.callbacks = {};
          }
          on(e4, ...t4) {
            return this.callbacks[e4] || (this.callbacks[e4] = []), this.callbacks[e4].push(...t4), this;
          }
          off(e4, t4) {
            if (!this.callbacks[e4])
              return null;
            const r4 = this.callbacks[e4].slice(0);
            for (let n = 0; n < r4.length; n++)
              t4 === r4[n] && this.callbacks[e4].splice(n, 1);
            return this;
          }
          trigger(e4) {
            if (!this.callbacks[e4.type])
              return null;
            const t4 = [...this.callbacks[e4.type]], r4 = [];
            for (let n = t4.length - 1; n >= 0; n--) {
              const o = t4[n];
              try {
                o(e4);
              } catch (e5) {
                r4.push(e5);
              }
            }
            return r4.length && console.error(`Draggable caught errors while triggering '${e4.type}'`, r4), this;
          }
        };
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(10), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.defaultOptions = void 0;
        var n, o = Object.assign || function(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r4 = arguments[t4];
            for (var n2 in r4)
              Object.prototype.hasOwnProperty.call(r4, n2) && (e4[n2] = r4[n2]);
          }
          return e4;
        }, i = r3(2), s = r3(6), a = r3(11), l = (n = a) && n.__esModule ? n : { default: n }, c = r3(5), u = r3(7), d = r3(8);
        const g = Symbol("onDragStart"), h = Symbol("onDragMove"), f = Symbol("onDragStop"), v = Symbol("onDragPressure"), m = { "drag:start": (e4) => `Picked up ${e4.source.textContent.trim() || e4.source.id || "draggable element"}`, "drag:stop": (e4) => `Released ${e4.source.textContent.trim() || e4.source.id || "draggable element"}` }, p = { "container:dragging": "draggable-container--is-dragging", "source:dragging": "draggable-source--is-dragging", "source:placed": "draggable-source--placed", "container:placed": "draggable-container--placed", "body:dragging": "draggable--is-dragging", "draggable:over": "draggable--over", "container:over": "draggable-container--over", "source:original": "draggable--original", mirror: "draggable-mirror" }, b = t3.defaultOptions = { draggable: ".draggable-source", handle: null, delay: 100, placedTimeout: 800, plugins: [], sensors: [] };
        class E {
          constructor(e4 = [document.body], t4 = {}) {
            if (e4 instanceof NodeList || e4 instanceof Array)
              this.containers = [...e4];
            else {
              if (!(e4 instanceof HTMLElement))
                throw new Error("Draggable containers are expected to be of type `NodeList`, `HTMLElement[]` or `HTMLElement`");
              this.containers = [e4];
            }
            this.options = o({}, b, t4, { classes: o({}, p, t4.classes || {}), announcements: o({}, m, t4.announcements || {}) }), this.emitter = new l.default(), this.dragging = false, this.plugins = [], this.sensors = [], this[g] = this[g].bind(this), this[h] = this[h].bind(this), this[f] = this[f].bind(this), this[v] = this[v].bind(this), document.addEventListener("drag:start", this[g], true), document.addEventListener("drag:move", this[h], true), document.addEventListener("drag:stop", this[f], true), document.addEventListener("drag:pressure", this[v], true);
            const r4 = Object.values(E.Plugins).map((e5) => e5), n2 = [c.MouseSensor, c.TouchSensor];
            this.addPlugin(...r4, ...this.options.plugins), this.addSensor(...n2, ...this.options.sensors);
            const i2 = new u.DraggableInitializedEvent({ draggable: this });
            this.on("mirror:created", ({ mirror: e5 }) => this.mirror = e5), this.on("mirror:destroy", () => this.mirror = null), this.trigger(i2);
          }
          destroy() {
            document.removeEventListener("drag:start", this[g], true), document.removeEventListener("drag:move", this[h], true), document.removeEventListener("drag:stop", this[f], true), document.removeEventListener("drag:pressure", this[v], true);
            const e4 = new u.DraggableDestroyEvent({ draggable: this });
            this.trigger(e4), this.removePlugin(...this.plugins.map((e5) => e5.constructor)), this.removeSensor(...this.sensors.map((e5) => e5.constructor));
          }
          addPlugin(...e4) {
            const t4 = e4.map((e5) => new e5(this));
            return t4.forEach((e5) => e5.attach()), this.plugins = [...this.plugins, ...t4], this;
          }
          removePlugin(...e4) {
            return this.plugins.filter((t4) => e4.includes(t4.constructor)).forEach((e5) => e5.detach()), this.plugins = this.plugins.filter((t4) => !e4.includes(t4.constructor)), this;
          }
          addSensor(...e4) {
            const t4 = e4.map((e5) => new e5(this.containers, this.options));
            return t4.forEach((e5) => e5.attach()), this.sensors = [...this.sensors, ...t4], this;
          }
          removeSensor(...e4) {
            return this.sensors.filter((t4) => e4.includes(t4.constructor)).forEach((e5) => e5.detach()), this.sensors = this.sensors.filter((t4) => !e4.includes(t4.constructor)), this;
          }
          addContainer(...e4) {
            return this.containers = [...this.containers, ...e4], this.sensors.forEach((t4) => t4.addContainer(...e4)), this;
          }
          removeContainer(...e4) {
            return this.containers = this.containers.filter((t4) => !e4.includes(t4)), this.sensors.forEach((t4) => t4.removeContainer(...e4)), this;
          }
          on(e4, ...t4) {
            return this.emitter.on(e4, ...t4), this;
          }
          off(e4, t4) {
            return this.emitter.off(e4, t4), this;
          }
          trigger(e4) {
            return this.emitter.trigger(e4), this;
          }
          getClassNameFor(e4) {
            return this.options.classes[e4];
          }
          isDragging() {
            return Boolean(this.dragging);
          }
          getDraggableElements() {
            return this.containers.reduce((e4, t4) => [...e4, ...this.getDraggableElementsForContainer(t4)], []);
          }
          getDraggableElementsForContainer(e4) {
            return [...e4.querySelectorAll(this.options.draggable)].filter((e5) => e5 !== this.originalSource && e5 !== this.mirror);
          }
          [g](e4) {
            const t4 = y(e4), { target: r4, container: n2 } = t4;
            if (!this.containers.includes(n2))
              return;
            if (this.options.handle && r4 && !(0, i.closest)(r4, this.options.handle))
              return void t4.cancel();
            if (this.originalSource = (0, i.closest)(r4, this.options.draggable), this.sourceContainer = n2, !this.originalSource)
              return void t4.cancel();
            this.lastPlacedSource && this.lastPlacedContainer && (clearTimeout(this.placedTimeoutID), this.lastPlacedSource.classList.remove(this.getClassNameFor("source:placed")), this.lastPlacedContainer.classList.remove(this.getClassNameFor("container:placed"))), this.source = this.originalSource.cloneNode(true), this.originalSource.parentNode.insertBefore(this.source, this.originalSource), this.originalSource.style.display = "none";
            const s2 = new d.DragStartEvent({ source: this.source, originalSource: this.originalSource, sourceContainer: n2, sensorEvent: t4 });
            if (this.trigger(s2), this.dragging = !s2.canceled(), s2.canceled())
              return this.source.parentNode.removeChild(this.source), void (this.originalSource.style.display = null);
            this.originalSource.classList.add(this.getClassNameFor("source:original")), this.source.classList.add(this.getClassNameFor("source:dragging")), this.sourceContainer.classList.add(this.getClassNameFor("container:dragging")), document.body.classList.add(this.getClassNameFor("body:dragging")), S(document.body, "none"), requestAnimationFrame(() => {
              const t5 = y(e4).clone({ target: this.source });
              this[h](o({}, e4, { detail: t5 }));
            });
          }
          [h](e4) {
            if (!this.dragging)
              return;
            const t4 = y(e4), { container: r4 } = t4;
            let n2 = t4.target;
            const o2 = new d.DragMoveEvent({ source: this.source, originalSource: this.originalSource, sourceContainer: r4, sensorEvent: t4 });
            this.trigger(o2), o2.canceled() && t4.cancel(), n2 = (0, i.closest)(n2, this.options.draggable);
            const s2 = (0, i.closest)(t4.target, this.containers), a2 = t4.overContainer || s2, l2 = this.currentOverContainer && a2 !== this.currentOverContainer, c2 = this.currentOver && n2 !== this.currentOver, u2 = a2 && this.currentOverContainer !== a2, g2 = s2 && n2 && this.currentOver !== n2;
            if (c2) {
              const e5 = new d.DragOutEvent({ source: this.source, originalSource: this.originalSource, sourceContainer: r4, sensorEvent: t4, over: this.currentOver });
              this.currentOver.classList.remove(this.getClassNameFor("draggable:over")), this.currentOver = null, this.trigger(e5);
            }
            if (l2) {
              const e5 = new d.DragOutContainerEvent({ source: this.source, originalSource: this.originalSource, sourceContainer: r4, sensorEvent: t4, overContainer: this.currentOverContainer });
              this.currentOverContainer.classList.remove(this.getClassNameFor("container:over")), this.currentOverContainer = null, this.trigger(e5);
            }
            if (u2) {
              a2.classList.add(this.getClassNameFor("container:over"));
              const e5 = new d.DragOverContainerEvent({ source: this.source, originalSource: this.originalSource, sourceContainer: r4, sensorEvent: t4, overContainer: a2 });
              this.currentOverContainer = a2, this.trigger(e5);
            }
            if (g2) {
              n2.classList.add(this.getClassNameFor("draggable:over"));
              const e5 = new d.DragOverEvent({ source: this.source, originalSource: this.originalSource, sourceContainer: r4, sensorEvent: t4, overContainer: a2, over: n2 });
              this.currentOver = n2, this.trigger(e5);
            }
          }
          [f](e4) {
            if (!this.dragging)
              return;
            this.dragging = false;
            const t4 = new d.DragStopEvent({ source: this.source, originalSource: this.originalSource, sensorEvent: e4.sensorEvent, sourceContainer: this.sourceContainer });
            this.trigger(t4), this.source.parentNode.insertBefore(this.originalSource, this.source), this.source.parentNode.removeChild(this.source), this.originalSource.style.display = "", this.source.classList.remove(this.getClassNameFor("source:dragging")), this.originalSource.classList.remove(this.getClassNameFor("source:original")), this.originalSource.classList.add(this.getClassNameFor("source:placed")), this.sourceContainer.classList.add(this.getClassNameFor("container:placed")), this.sourceContainer.classList.remove(this.getClassNameFor("container:dragging")), document.body.classList.remove(this.getClassNameFor("body:dragging")), S(document.body, ""), this.currentOver && this.currentOver.classList.remove(this.getClassNameFor("draggable:over")), this.currentOverContainer && this.currentOverContainer.classList.remove(this.getClassNameFor("container:over")), this.lastPlacedSource = this.originalSource, this.lastPlacedContainer = this.sourceContainer, this.placedTimeoutID = setTimeout(() => {
              this.lastPlacedSource && this.lastPlacedSource.classList.remove(this.getClassNameFor("source:placed")), this.lastPlacedContainer && this.lastPlacedContainer.classList.remove(this.getClassNameFor("container:placed")), this.lastPlacedSource = null, this.lastPlacedContainer = null;
            }, this.options.placedTimeout), this.source = null, this.originalSource = null, this.currentOverContainer = null, this.currentOver = null, this.sourceContainer = null;
          }
          [v](e4) {
            if (!this.dragging)
              return;
            const t4 = y(e4), r4 = this.source || (0, i.closest)(t4.originalEvent.target, this.options.draggable), n2 = new d.DragPressureEvent({ sensorEvent: t4, source: r4, pressure: t4.pressure });
            this.trigger(n2);
          }
        }
        function y(e4) {
          return e4.detail;
        }
        function S(e4, t4) {
          e4.style.webkitUserSelect = t4, e4.style.mozUserSelect = t4, e4.style.msUserSelect = t4, e4.style.oUserSelect = t4, e4.style.userSelect = t4;
        }
        t3.default = E, E.Plugins = { Announcement: s.Announcement, Focusable: s.Focusable, Mirror: s.Mirror, Scrollable: s.Scrollable };
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(1), i = (n = o) && n.__esModule ? n : { default: n }, s = r3(0);
        const a = Symbol("onMouseForceWillBegin"), l = Symbol("onMouseForceDown"), c = Symbol("onMouseDown"), u = Symbol("onMouseForceChange"), d = Symbol("onMouseMove"), g = Symbol("onMouseUp"), h = Symbol("onMouseForceGlobalChange");
        class f extends i.default {
          constructor(e4 = [], t4 = {}) {
            super(e4, t4), this.mightDrag = false, this[a] = this[a].bind(this), this[l] = this[l].bind(this), this[c] = this[c].bind(this), this[u] = this[u].bind(this), this[d] = this[d].bind(this), this[g] = this[g].bind(this);
          }
          attach() {
            for (const e4 of this.containers)
              e4.addEventListener("webkitmouseforcewillbegin", this[a], false), e4.addEventListener("webkitmouseforcedown", this[l], false), e4.addEventListener("mousedown", this[c], true), e4.addEventListener("webkitmouseforcechanged", this[u], false);
            document.addEventListener("mousemove", this[d]), document.addEventListener("mouseup", this[g]);
          }
          detach() {
            for (const e4 of this.containers)
              e4.removeEventListener("webkitmouseforcewillbegin", this[a], false), e4.removeEventListener("webkitmouseforcedown", this[l], false), e4.removeEventListener("mousedown", this[c], true), e4.removeEventListener("webkitmouseforcechanged", this[u], false);
            document.removeEventListener("mousemove", this[d]), document.removeEventListener("mouseup", this[g]);
          }
          [a](e4) {
            e4.preventDefault(), this.mightDrag = true;
          }
          [l](e4) {
            if (this.dragging)
              return;
            const t4 = document.elementFromPoint(e4.clientX, e4.clientY), r4 = e4.currentTarget, n2 = new s.DragStartSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: t4, container: r4, originalEvent: e4 });
            this.trigger(r4, n2), this.currentContainer = r4, this.dragging = !n2.canceled(), this.mightDrag = false;
          }
          [g](e4) {
            if (!this.dragging)
              return;
            const t4 = new s.DragStopSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: null, container: this.currentContainer, originalEvent: e4 });
            this.trigger(this.currentContainer, t4), this.currentContainer = null, this.dragging = false, this.mightDrag = false;
          }
          [c](e4) {
            this.mightDrag && (e4.stopPropagation(), e4.stopImmediatePropagation(), e4.preventDefault());
          }
          [d](e4) {
            if (!this.dragging)
              return;
            const t4 = document.elementFromPoint(e4.clientX, e4.clientY), r4 = new s.DragMoveSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: t4, container: this.currentContainer, originalEvent: e4 });
            this.trigger(this.currentContainer, r4);
          }
          [u](e4) {
            if (this.dragging)
              return;
            const t4 = e4.target, r4 = e4.currentTarget, n2 = new s.DragPressureSensorEvent({ pressure: e4.webkitForce, clientX: e4.clientX, clientY: e4.clientY, target: t4, container: r4, originalEvent: e4 });
            this.trigger(r4, n2);
          }
          [h](e4) {
            if (!this.dragging)
              return;
            const t4 = e4.target, r4 = new s.DragPressureSensorEvent({ pressure: e4.webkitForce, clientX: e4.clientX, clientY: e4.clientY, target: t4, container: this.currentContainer, originalEvent: e4 });
            this.trigger(this.currentContainer, r4);
          }
        }
        t3.default = f;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(13), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(2), i = r3(1), s = (n = i) && n.__esModule ? n : { default: n }, a = r3(0);
        const l = Symbol("onMouseDown"), c = Symbol("onMouseUp"), u = Symbol("onDragStart"), d = Symbol("onDragOver"), g = Symbol("onDragEnd"), h = Symbol("onDrop"), f = Symbol("reset");
        class v extends s.default {
          constructor(e4 = [], t4 = {}) {
            super(e4, t4), this.mouseDownTimeout = null, this.draggableElement = null, this.nativeDraggableElement = null, this[l] = this[l].bind(this), this[c] = this[c].bind(this), this[u] = this[u].bind(this), this[d] = this[d].bind(this), this[g] = this[g].bind(this), this[h] = this[h].bind(this);
          }
          attach() {
            document.addEventListener("mousedown", this[l], true);
          }
          detach() {
            document.removeEventListener("mousedown", this[l], true);
          }
          [u](e4) {
            e4.dataTransfer.setData("text", ""), e4.dataTransfer.effectAllowed = this.options.type;
            const t4 = document.elementFromPoint(e4.clientX, e4.clientY);
            if (this.currentContainer = (0, o.closest)(e4.target, this.containers), !this.currentContainer)
              return;
            const r4 = new a.DragStartSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: t4, container: this.currentContainer, originalEvent: e4 });
            setTimeout(() => {
              this.trigger(this.currentContainer, r4), r4.canceled() ? this.dragging = false : this.dragging = true;
            }, 0);
          }
          [d](e4) {
            if (!this.dragging)
              return;
            const t4 = document.elementFromPoint(e4.clientX, e4.clientY), r4 = this.currentContainer, n2 = new a.DragMoveSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: t4, container: r4, originalEvent: e4 });
            this.trigger(r4, n2), n2.canceled() || (e4.preventDefault(), e4.dataTransfer.dropEffect = this.options.type);
          }
          [g](e4) {
            if (!this.dragging)
              return;
            document.removeEventListener("mouseup", this[c], true);
            const t4 = document.elementFromPoint(e4.clientX, e4.clientY), r4 = this.currentContainer, n2 = new a.DragStopSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: t4, container: r4, originalEvent: e4 });
            this.trigger(r4, n2), this.dragging = false, this[f]();
          }
          [h](e4) {
            e4.preventDefault();
          }
          [l](e4) {
            if (e4.target && (e4.target.form || e4.target.contenteditable))
              return;
            const t4 = (0, o.closest)(e4.target, (e5) => e5.draggable);
            t4 && (t4.draggable = false, this.nativeDraggableElement = t4), document.addEventListener("mouseup", this[c], true), document.addEventListener("dragstart", this[u], false), document.addEventListener("dragover", this[d], false), document.addEventListener("dragend", this[g], false), document.addEventListener("drop", this[h], false);
            const r4 = (0, o.closest)(e4.target, this.options.draggable);
            r4 && (this.mouseDownTimeout = setTimeout(() => {
              r4.draggable = true, this.draggableElement = r4;
            }, this.options.delay));
          }
          [c]() {
            this[f]();
          }
          [f]() {
            clearTimeout(this.mouseDownTimeout), document.removeEventListener("mouseup", this[c], true), document.removeEventListener("dragstart", this[u], false), document.removeEventListener("dragover", this[d], false), document.removeEventListener("dragend", this[g], false), document.removeEventListener("drop", this[h], false), this.nativeDraggableElement && (this.nativeDraggableElement.draggable = true, this.nativeDraggableElement = null), this.draggableElement && (this.draggableElement.draggable = false, this.draggableElement = null);
          }
        }
        t3.default = v;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(15), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(2), i = r3(1), s = (n = i) && n.__esModule ? n : { default: n }, a = r3(0);
        const l = Symbol("onTouchStart"), c = Symbol("onTouchHold"), u = Symbol("onTouchEnd"), d = Symbol("onTouchMove");
        let g = false;
        window.addEventListener("touchmove", (e4) => {
          g && e4.preventDefault();
        }, { passive: false });
        class h extends s.default {
          constructor(e4 = [], t4 = {}) {
            super(e4, t4), this.currentScrollableParent = null, this.tapTimeout = null, this.touchMoved = false, this[l] = this[l].bind(this), this[c] = this[c].bind(this), this[u] = this[u].bind(this), this[d] = this[d].bind(this);
          }
          attach() {
            document.addEventListener("touchstart", this[l]);
          }
          detach() {
            document.removeEventListener("touchstart", this[l]);
          }
          [l](e4) {
            const t4 = (0, o.closest)(e4.target, this.containers);
            t4 && (document.addEventListener("touchmove", this[d]), document.addEventListener("touchend", this[u]), document.addEventListener("touchcancel", this[u]), t4.addEventListener("contextmenu", f), this.currentContainer = t4, this.tapTimeout = setTimeout(this[c](e4, t4), this.options.delay));
          }
          [c](e4, t4) {
            return () => {
              if (this.touchMoved)
                return;
              const r4 = e4.touches[0] || e4.changedTouches[0], n2 = e4.target, o2 = new a.DragStartSensorEvent({ clientX: r4.pageX, clientY: r4.pageY, target: n2, container: t4, originalEvent: e4 });
              this.trigger(t4, o2), this.dragging = !o2.canceled(), g = this.dragging;
            };
          }
          [d](e4) {
            if (this.touchMoved = true, !this.dragging)
              return;
            const t4 = e4.touches[0] || e4.changedTouches[0], r4 = document.elementFromPoint(t4.pageX - window.scrollX, t4.pageY - window.scrollY), n2 = new a.DragMoveSensorEvent({ clientX: t4.pageX, clientY: t4.pageY, target: r4, container: this.currentContainer, originalEvent: e4 });
            this.trigger(this.currentContainer, n2);
          }
          [u](e4) {
            if (this.touchMoved = false, g = false, document.removeEventListener("touchend", this[u]), document.removeEventListener("touchcancel", this[u]), document.removeEventListener("touchmove", this[d]), this.currentContainer && this.currentContainer.removeEventListener("contextmenu", f), clearTimeout(this.tapTimeout), !this.dragging)
              return;
            const t4 = e4.touches[0] || e4.changedTouches[0], r4 = document.elementFromPoint(t4.pageX - window.scrollX, t4.pageY - window.scrollY);
            e4.preventDefault();
            const n2 = new a.DragStopSensorEvent({ clientX: t4.pageX, clientY: t4.pageY, target: r4, container: this.currentContainer, originalEvent: e4 });
            this.trigger(this.currentContainer, n2), this.currentContainer = null, this.dragging = false;
          }
        }
        function f(e4) {
          e4.preventDefault(), e4.stopPropagation();
        }
        t3.default = h;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(17), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.DragPressureSensorEvent = t3.DragStopSensorEvent = t3.DragMoveSensorEvent = t3.DragStartSensorEvent = t3.SensorEvent = void 0;
        var n, o = r3(3), i = (n = o) && n.__esModule ? n : { default: n };
        class s extends i.default {
          get originalEvent() {
            return this.data.originalEvent;
          }
          get clientX() {
            return this.data.clientX;
          }
          get clientY() {
            return this.data.clientY;
          }
          get target() {
            return this.data.target;
          }
          get container() {
            return this.data.container;
          }
          get pressure() {
            return this.data.pressure;
          }
        }
        t3.SensorEvent = s;
        class a extends s {
        }
        t3.DragStartSensorEvent = a, a.type = "drag:start";
        class l extends s {
        }
        t3.DragMoveSensorEvent = l, l.type = "drag:move";
        class c extends s {
        }
        t3.DragStopSensorEvent = c, c.type = "drag:stop";
        class u extends s {
        }
        t3.DragPressureSensorEvent = u, u.type = "drag:pressure";
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(2), i = r3(1), s = (n = i) && n.__esModule ? n : { default: n }, a = r3(0);
        const l = Symbol("onContextMenuWhileDragging"), c = Symbol("onMouseDown"), u = Symbol("onMouseMove"), d = Symbol("onMouseUp");
        class g extends s.default {
          constructor(e4 = [], t4 = {}) {
            super(e4, t4), this.mouseDown = false, this.mouseDownTimeout = null, this.openedContextMenu = false, this[l] = this[l].bind(this), this[c] = this[c].bind(this), this[u] = this[u].bind(this), this[d] = this[d].bind(this);
          }
          attach() {
            document.addEventListener("mousedown", this[c], true);
          }
          detach() {
            document.removeEventListener("mousedown", this[c], true);
          }
          [c](e4) {
            if (0 !== e4.button || e4.ctrlKey || e4.metaKey)
              return;
            document.addEventListener("mouseup", this[d]);
            const t4 = document.elementFromPoint(e4.clientX, e4.clientY), r4 = (0, o.closest)(t4, this.containers);
            r4 && (document.addEventListener("dragstart", h), this.mouseDown = true, clearTimeout(this.mouseDownTimeout), this.mouseDownTimeout = setTimeout(() => {
              if (!this.mouseDown)
                return;
              const n2 = new a.DragStartSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: t4, container: r4, originalEvent: e4 });
              this.trigger(r4, n2), this.currentContainer = r4, this.dragging = !n2.canceled(), this.dragging && (document.addEventListener("contextmenu", this[l]), document.addEventListener("mousemove", this[u]));
            }, this.options.delay));
          }
          [u](e4) {
            if (!this.dragging)
              return;
            const t4 = document.elementFromPoint(e4.clientX, e4.clientY), r4 = new a.DragMoveSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: t4, container: this.currentContainer, originalEvent: e4 });
            this.trigger(this.currentContainer, r4);
          }
          [d](e4) {
            if (this.mouseDown = Boolean(this.openedContextMenu), this.openedContextMenu)
              return void (this.openedContextMenu = false);
            if (document.removeEventListener("mouseup", this[d]), document.removeEventListener("dragstart", h), !this.dragging)
              return;
            const t4 = document.elementFromPoint(e4.clientX, e4.clientY), r4 = new a.DragStopSensorEvent({ clientX: e4.clientX, clientY: e4.clientY, target: t4, container: this.currentContainer, originalEvent: e4 });
            this.trigger(this.currentContainer, r4), document.removeEventListener("contextmenu", this[l]), document.removeEventListener("mousemove", this[u]), this.currentContainer = null, this.dragging = false;
          }
          [l](e4) {
            e4.preventDefault(), this.openedContextMenu = true;
          }
        }
        function h(e4) {
          e4.preventDefault();
        }
        t3.default = g;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(20), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = Object.assign || function(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r4 = arguments[t4];
            for (var n2 in r4)
              Object.prototype.hasOwnProperty.call(r4, n2) && (e4[n2] = r4[n2]);
          }
          return e4;
        };
        t3.default = class {
          constructor(e4 = [], t4 = {}) {
            this.containers = [...e4], this.options = n({}, t4), this.dragging = false, this.currentContainer = null;
          }
          attach() {
            return this;
          }
          detach() {
            return this;
          }
          addContainer(...e4) {
            this.containers = [...this.containers, ...e4];
          }
          removeContainer(...e4) {
            this.containers = this.containers.filter((t4) => !e4.includes(t4));
          }
          trigger(e4, t4) {
            const r4 = document.createEvent("Event");
            return r4.detail = t4, r4.initEvent(t4.type, true, true), e4.dispatchEvent(r4), this.lastEvent = t4, t4;
          }
        };
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.default = function(e4) {
          return requestAnimationFrame(() => {
            requestAnimationFrame(e4);
          });
        };
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(23), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.default = function(e4, t4) {
          if (!e4)
            return null;
          const r4 = t4, o = t4, i = t4, s = t4, a = Boolean("string" == typeof t4), l = Boolean("function" == typeof t4), c = Boolean(t4 instanceof NodeList || t4 instanceof Array), u = Boolean(t4 instanceof HTMLElement);
          let d = e4;
          do {
            if (d = d.correspondingUseElement || d.correspondingElement || d, (g = d) ? a ? n.call(g, r4) : c ? [...i].includes(g) : u ? s === g : l && o(g) : g)
              return d;
            d = d.parentNode;
          } while (d && d !== document.body && d !== document);
          var g;
          return null;
        };
        const n = Element.prototype.matches || Element.prototype.webkitMatchesSelector || Element.prototype.mozMatchesSelector || Element.prototype.msMatchesSelector;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(25), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.defaultOptions = t3.scroll = t3.onDragStop = t3.onDragMove = t3.onDragStart = void 0;
        var n, o = Object.assign || function(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r4 = arguments[t4];
            for (var n2 in r4)
              Object.prototype.hasOwnProperty.call(r4, n2) && (e4[n2] = r4[n2]);
          }
          return e4;
        }, i = r3(4), s = (n = i) && n.__esModule ? n : { default: n }, a = r3(2);
        const l = t3.onDragStart = Symbol("onDragStart"), c = t3.onDragMove = Symbol("onDragMove"), u = t3.onDragStop = Symbol("onDragStop"), d = t3.scroll = Symbol("scroll"), g = t3.defaultOptions = { speed: 6, sensitivity: 50, scrollableElements: [] };
        class h extends s.default {
          constructor(e4) {
            super(e4), this.options = o({}, g, this.getOptions()), this.currentMousePosition = null, this.scrollAnimationFrame = null, this.scrollableElement = null, this.findScrollableElementFrame = null, this[l] = this[l].bind(this), this[c] = this[c].bind(this), this[u] = this[u].bind(this), this[d] = this[d].bind(this);
          }
          attach() {
            this.draggable.on("drag:start", this[l]).on("drag:move", this[c]).on("drag:stop", this[u]);
          }
          detach() {
            this.draggable.off("drag:start", this[l]).off("drag:move", this[c]).off("drag:stop", this[u]);
          }
          getOptions() {
            return this.draggable.options.scrollable || {};
          }
          getScrollableElement(e4) {
            return this.hasDefinedScrollableElements() ? (0, a.closest)(e4, this.options.scrollableElements) || document.documentElement : function(e5) {
              if (!e5)
                return f();
              const t4 = getComputedStyle(e5).getPropertyValue("position"), r4 = "absolute" === t4, n2 = (0, a.closest)(e5, (e6) => (!r4 || !function(e7) {
                return "static" === getComputedStyle(e7).getPropertyValue("position");
              }(e6)) && function(e7) {
                const t5 = getComputedStyle(e7, null), r5 = t5.getPropertyValue("overflow") + t5.getPropertyValue("overflow-y") + t5.getPropertyValue("overflow-x");
                return /(auto|scroll)/.test(r5);
              }(e6));
              return "fixed" !== t4 && n2 ? n2 : f();
            }(e4);
          }
          hasDefinedScrollableElements() {
            return Boolean(0 !== this.options.scrollableElements.length);
          }
          [l](e4) {
            this.findScrollableElementFrame = requestAnimationFrame(() => {
              this.scrollableElement = this.getScrollableElement(e4.source);
            });
          }
          [c](e4) {
            if (this.findScrollableElementFrame = requestAnimationFrame(() => {
              this.scrollableElement = this.getScrollableElement(e4.sensorEvent.target);
            }), !this.scrollableElement)
              return;
            const t4 = e4.sensorEvent, r4 = { x: 0, y: 0 };
            "ontouchstart" in window && (r4.y = window.pageYOffset || document.documentElement.scrollTop || document.body.scrollTop || 0, r4.x = window.pageXOffset || document.documentElement.scrollLeft || document.body.scrollLeft || 0), this.currentMousePosition = { clientX: t4.clientX - r4.x, clientY: t4.clientY - r4.y }, this.scrollAnimationFrame = requestAnimationFrame(this[d]);
          }
          [u]() {
            cancelAnimationFrame(this.scrollAnimationFrame), cancelAnimationFrame(this.findScrollableElementFrame), this.scrollableElement = null, this.scrollAnimationFrame = null, this.findScrollableElementFrame = null, this.currentMousePosition = null;
          }
          [d]() {
            if (!this.scrollableElement || !this.currentMousePosition)
              return;
            cancelAnimationFrame(this.scrollAnimationFrame);
            const { speed: e4, sensitivity: t4 } = this.options, r4 = this.scrollableElement.getBoundingClientRect(), n2 = r4.bottom > window.innerHeight, o2 = r4.top < 0 || n2, i2 = f(), s2 = this.scrollableElement, a2 = this.currentMousePosition.clientX, l2 = this.currentMousePosition.clientY;
            if (s2 === document.body || s2 === document.documentElement || o2) {
              const { innerHeight: r5, innerWidth: n3 } = window;
              l2 < t4 ? i2.scrollTop -= e4 : r5 - l2 < t4 && (i2.scrollTop += e4), a2 < t4 ? i2.scrollLeft -= e4 : n3 - a2 < t4 && (i2.scrollLeft += e4);
            } else {
              const { offsetHeight: n3, offsetWidth: o3 } = s2;
              r4.top + n3 - l2 < t4 ? s2.scrollTop += e4 : l2 - r4.top < t4 && (s2.scrollTop -= e4), r4.left + o3 - a2 < t4 ? s2.scrollLeft += e4 : a2 - r4.left < t4 && (s2.scrollLeft -= e4);
            }
            this.scrollAnimationFrame = requestAnimationFrame(this[d]);
          }
        }
        function f() {
          return document.scrollingElement || document.documentElement;
        }
        t3.default = h;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.defaultOptions = void 0;
        var n, o = r3(27), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default, t3.defaultOptions = o.defaultOptions;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.MirrorDestroyEvent = t3.MirrorMoveEvent = t3.MirrorAttachedEvent = t3.MirrorCreatedEvent = t3.MirrorCreateEvent = t3.MirrorEvent = void 0;
        var n, o = r3(3), i = (n = o) && n.__esModule ? n : { default: n };
        class s extends i.default {
          get source() {
            return this.data.source;
          }
          get originalSource() {
            return this.data.originalSource;
          }
          get sourceContainer() {
            return this.data.sourceContainer;
          }
          get sensorEvent() {
            return this.data.sensorEvent;
          }
          get dragEvent() {
            return this.data.dragEvent;
          }
          get originalEvent() {
            return this.sensorEvent ? this.sensorEvent.originalEvent : null;
          }
        }
        t3.MirrorEvent = s;
        class a extends s {
        }
        t3.MirrorCreateEvent = a, a.type = "mirror:create";
        class l extends s {
          get mirror() {
            return this.data.mirror;
          }
        }
        t3.MirrorCreatedEvent = l, l.type = "mirror:created";
        class c extends s {
          get mirror() {
            return this.data.mirror;
          }
        }
        t3.MirrorAttachedEvent = c, c.type = "mirror:attached";
        class u extends s {
          get mirror() {
            return this.data.mirror;
          }
        }
        t3.MirrorMoveEvent = u, u.type = "mirror:move", u.cancelable = true;
        class d extends s {
          get mirror() {
            return this.data.mirror;
          }
        }
        t3.MirrorDestroyEvent = d, d.type = "mirror:destroy", d.cancelable = true;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(29);
        Object.keys(n).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return n[e4];
          } });
        });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.defaultOptions = t3.getAppendableContainer = t3.onScroll = t3.onMirrorMove = t3.onMirrorCreated = t3.onDragStop = t3.onDragMove = t3.onDragStart = void 0;
        var n, o = Object.assign || function(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r4 = arguments[t4];
            for (var n2 in r4)
              Object.prototype.hasOwnProperty.call(r4, n2) && (e4[n2] = r4[n2]);
          }
          return e4;
        }, i = r3(4), s = (n = i) && n.__esModule ? n : { default: n }, a = r3(30);
        function l(e4, t4) {
          var r4 = {};
          for (var n2 in e4)
            t4.indexOf(n2) >= 0 || Object.prototype.hasOwnProperty.call(e4, n2) && (r4[n2] = e4[n2]);
          return r4;
        }
        const c = t3.onDragStart = Symbol("onDragStart"), u = t3.onDragMove = Symbol("onDragMove"), d = t3.onDragStop = Symbol("onDragStop"), g = t3.onMirrorCreated = Symbol("onMirrorCreated"), h = t3.onMirrorMove = Symbol("onMirrorMove"), f = t3.onScroll = Symbol("onScroll"), v = t3.getAppendableContainer = Symbol("getAppendableContainer"), m = t3.defaultOptions = { constrainDimensions: false, xAxis: true, yAxis: true, cursorOffsetX: null, cursorOffsetY: null };
        class p extends s.default {
          constructor(e4) {
            super(e4), this.options = o({}, m, this.getOptions()), this.scrollOffset = { x: 0, y: 0 }, this.initialScrollOffset = { x: window.scrollX, y: window.scrollY }, this[c] = this[c].bind(this), this[u] = this[u].bind(this), this[d] = this[d].bind(this), this[g] = this[g].bind(this), this[h] = this[h].bind(this), this[f] = this[f].bind(this);
          }
          attach() {
            this.draggable.on("drag:start", this[c]).on("drag:move", this[u]).on("drag:stop", this[d]).on("mirror:created", this[g]).on("mirror:move", this[h]);
          }
          detach() {
            this.draggable.off("drag:start", this[c]).off("drag:move", this[u]).off("drag:stop", this[d]).off("mirror:created", this[g]).off("mirror:move", this[h]);
          }
          getOptions() {
            return this.draggable.options.mirror || {};
          }
          [c](e4) {
            if (e4.canceled())
              return;
            "ontouchstart" in window && document.addEventListener("scroll", this[f], true), this.initialScrollOffset = { x: window.scrollX, y: window.scrollY };
            const { source: t4, originalSource: r4, sourceContainer: n2, sensorEvent: o2 } = e4, i2 = new a.MirrorCreateEvent({ source: t4, originalSource: r4, sourceContainer: n2, sensorEvent: o2, dragEvent: e4 });
            if (this.draggable.trigger(i2), function(e5) {
              return /^drag/.test(e5.originalEvent.type);
            }(o2) || i2.canceled())
              return;
            const s2 = this[v](t4) || n2;
            this.mirror = t4.cloneNode(true);
            const l2 = new a.MirrorCreatedEvent({ source: t4, originalSource: r4, sourceContainer: n2, sensorEvent: o2, dragEvent: e4, mirror: this.mirror }), c2 = new a.MirrorAttachedEvent({ source: t4, originalSource: r4, sourceContainer: n2, sensorEvent: o2, dragEvent: e4, mirror: this.mirror });
            this.draggable.trigger(l2), s2.appendChild(this.mirror), this.draggable.trigger(c2);
          }
          [u](e4) {
            if (!this.mirror || e4.canceled())
              return;
            const { source: t4, originalSource: r4, sourceContainer: n2, sensorEvent: o2 } = e4, i2 = new a.MirrorMoveEvent({ source: t4, originalSource: r4, sourceContainer: n2, sensorEvent: o2, dragEvent: e4, mirror: this.mirror });
            this.draggable.trigger(i2);
          }
          [d](e4) {
            if ("ontouchstart" in window && document.removeEventListener("scroll", this[f], true), this.initialScrollOffset = { x: 0, y: 0 }, this.scrollOffset = { x: 0, y: 0 }, !this.mirror)
              return;
            const { source: t4, sourceContainer: r4, sensorEvent: n2 } = e4, o2 = new a.MirrorDestroyEvent({ source: t4, mirror: this.mirror, sourceContainer: r4, sensorEvent: n2, dragEvent: e4 });
            this.draggable.trigger(o2), o2.canceled() || this.mirror.parentNode.removeChild(this.mirror);
          }
          [f]() {
            this.scrollOffset = { x: window.scrollX - this.initialScrollOffset.x, y: window.scrollY - this.initialScrollOffset.y };
          }
          [g]({ mirror: e4, source: t4, sensorEvent: r4 }) {
            const n2 = { mirror: e4, source: t4, sensorEvent: r4, mirrorClass: this.draggable.getClassNameFor("mirror"), scrollOffset: this.scrollOffset, options: this.options };
            return Promise.resolve(n2).then(b).then(E).then(y).then(S).then(C({ initial: true })).then(O).then((e5) => {
              let { mirrorOffset: t5, initialX: r5, initialY: n3 } = e5, i2 = l(e5, ["mirrorOffset", "initialX", "initialY"]);
              return this.mirrorOffset = t5, this.initialX = r5, this.initialY = n3, o({ mirrorOffset: t5, initialX: r5, initialY: n3 }, i2);
            });
          }
          [h](e4) {
            if (e4.canceled())
              return null;
            const t4 = { mirror: e4.mirror, sensorEvent: e4.sensorEvent, mirrorOffset: this.mirrorOffset, options: this.options, initialX: this.initialX, initialY: this.initialY, scrollOffset: this.scrollOffset };
            return Promise.resolve(t4).then(C({ raf: true }));
          }
          [v](e4) {
            const t4 = this.options.appendTo;
            return "string" == typeof t4 ? document.querySelector(t4) : t4 instanceof HTMLElement ? t4 : "function" == typeof t4 ? t4(e4) : e4.parentNode;
          }
        }
        function b(e4) {
          let { source: t4 } = e4, r4 = l(e4, ["source"]);
          return w((e5) => {
            const n2 = t4.getBoundingClientRect();
            e5(o({ source: t4, sourceRect: n2 }, r4));
          });
        }
        function E(e4) {
          let { sensorEvent: t4, sourceRect: r4, options: n2 } = e4, i2 = l(e4, ["sensorEvent", "sourceRect", "options"]);
          return w((e5) => {
            const s2 = null === n2.cursorOffsetY ? t4.clientY - r4.top : n2.cursorOffsetY, a2 = null === n2.cursorOffsetX ? t4.clientX - r4.left : n2.cursorOffsetX;
            e5(o({ sensorEvent: t4, sourceRect: r4, mirrorOffset: { top: s2, left: a2 }, options: n2 }, i2));
          });
        }
        function y(e4) {
          let { mirror: t4, source: r4, options: n2 } = e4, i2 = l(e4, ["mirror", "source", "options"]);
          return w((e5) => {
            let s2, a2;
            if (n2.constrainDimensions) {
              const e6 = getComputedStyle(r4);
              s2 = e6.getPropertyValue("height"), a2 = e6.getPropertyValue("width");
            }
            t4.style.position = "fixed", t4.style.pointerEvents = "none", t4.style.top = 0, t4.style.left = 0, t4.style.margin = 0, n2.constrainDimensions && (t4.style.height = s2, t4.style.width = a2), e5(o({ mirror: t4, source: r4, options: n2 }, i2));
          });
        }
        function S(e4) {
          let { mirror: t4, mirrorClass: r4 } = e4, n2 = l(e4, ["mirror", "mirrorClass"]);
          return w((e5) => {
            t4.classList.add(r4), e5(o({ mirror: t4, mirrorClass: r4 }, n2));
          });
        }
        function O(e4) {
          let { mirror: t4 } = e4, r4 = l(e4, ["mirror"]);
          return w((e5) => {
            t4.removeAttribute("id"), delete t4.id, e5(o({ mirror: t4 }, r4));
          });
        }
        function C({ withFrame: e4 = false, initial: t4 = false } = {}) {
          return (r4) => {
            let { mirror: n2, sensorEvent: i2, mirrorOffset: s2, initialY: a2, initialX: c2, scrollOffset: u2, options: d2 } = r4, g2 = l(r4, ["mirror", "sensorEvent", "mirrorOffset", "initialY", "initialX", "scrollOffset", "options"]);
            return w((e5) => {
              const r5 = o({ mirror: n2, sensorEvent: i2, mirrorOffset: s2, options: d2 }, g2);
              if (s2) {
                const e6 = i2.clientX - s2.left - u2.x, o2 = i2.clientY - s2.top - u2.y;
                d2.xAxis && d2.yAxis || t4 ? n2.style.transform = `translate3d(${e6}px, ${o2}px, 0)` : d2.xAxis && !d2.yAxis ? n2.style.transform = `translate3d(${e6}px, ${a2}px, 0)` : d2.yAxis && !d2.xAxis && (n2.style.transform = `translate3d(${c2}px, ${o2}px, 0)`), t4 && (r5.initialX = e6, r5.initialY = o2);
              }
              e5(r5);
            }, { frame: e4 });
          };
        }
        function w(e4, { raf: t4 = false } = {}) {
          return new Promise((r4, n2) => {
            t4 ? requestAnimationFrame(() => {
              e4(r4, n2);
            }) : e4(r4, n2);
          });
        }
        t3.default = p;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.defaultOptions = void 0;
        var n, o = r3(31), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default, t3.defaultOptions = o.defaultOptions;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = Object.assign || function(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r4 = arguments[t4];
            for (var n2 in r4)
              Object.prototype.hasOwnProperty.call(r4, n2) && (e4[n2] = r4[n2]);
          }
          return e4;
        }, i = r3(4), s = (n = i) && n.__esModule ? n : { default: n };
        const a = Symbol("onInitialize"), l = Symbol("onDestroy"), c = {};
        class u extends s.default {
          constructor(e4) {
            super(e4), this.options = o({}, c, this.getOptions()), this[a] = this[a].bind(this), this[l] = this[l].bind(this);
          }
          attach() {
            this.draggable.on("draggable:initialize", this[a]).on("draggable:destroy", this[l]);
          }
          detach() {
            this.draggable.off("draggable:initialize", this[a]).off("draggable:destroy", this[l]);
          }
          getOptions() {
            return this.draggable.options.focusable || {};
          }
          getElements() {
            return [...this.draggable.containers, ...this.draggable.getDraggableElements()];
          }
          [a]() {
            requestAnimationFrame(() => {
              this.getElements().forEach((e4) => function(e5) {
                Boolean(!e5.getAttribute("tabindex") && -1 === e5.tabIndex) && (d.push(e5), e5.tabIndex = 0);
              }(e4));
            });
          }
          [l]() {
            requestAnimationFrame(() => {
              this.getElements().forEach((e4) => function(e5) {
                const t4 = d.indexOf(e5);
                -1 !== t4 && (e5.tabIndex = -1, d.splice(t4, 1));
              }(e4));
            });
          }
        }
        t3.default = u;
        const d = [];
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = r3(33), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.default = class {
          constructor(e4) {
            this.draggable = e4;
          }
          attach() {
            throw new Error("Not Implemented");
          }
          detach() {
            throw new Error("Not Implemented");
          }
        };
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.defaultOptions = void 0;
        var n, o = Object.assign || function(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r4 = arguments[t4];
            for (var n2 in r4)
              Object.prototype.hasOwnProperty.call(r4, n2) && (e4[n2] = r4[n2]);
          }
          return e4;
        }, i = r3(4), s = (n = i) && n.__esModule ? n : { default: n };
        const a = Symbol("onInitialize"), l = Symbol("onDestroy"), c = Symbol("announceEvent"), u = Symbol("announceMessage"), d = t3.defaultOptions = { expire: 7e3 };
        class g extends s.default {
          constructor(e4) {
            super(e4), this.options = o({}, d, this.getOptions()), this.originalTriggerMethod = this.draggable.trigger, this[a] = this[a].bind(this), this[l] = this[l].bind(this);
          }
          attach() {
            this.draggable.on("draggable:initialize", this[a]);
          }
          detach() {
            this.draggable.off("draggable:destroy", this[l]);
          }
          getOptions() {
            return this.draggable.options.announcements || {};
          }
          [c](e4) {
            const t4 = this.options[e4.type];
            t4 && "string" == typeof t4 && this[u](t4), t4 && "function" == typeof t4 && this[u](t4(e4));
          }
          [u](e4) {
            !function(e5, { expire: t4 }) {
              const r4 = document.createElement("div");
              r4.textContent = e5, h.appendChild(r4), setTimeout(() => {
                h.removeChild(r4);
              }, t4);
            }(e4, { expire: this.options.expire });
          }
          [a]() {
            this.draggable.trigger = (e4) => {
              try {
                this[c](e4);
              } finally {
                this.originalTriggerMethod.call(this.draggable, e4);
              }
            };
          }
          [l]() {
            this.draggable.trigger = this.originalTriggerMethod;
          }
        }
        t3.default = g;
        const h = function() {
          const e4 = document.createElement("div");
          return e4.setAttribute("id", "draggable-live-region"), e4.setAttribute("aria-relevant", "additions"), e4.setAttribute("aria-atomic", "true"), e4.setAttribute("aria-live", "assertive"), e4.setAttribute("role", "log"), e4.style.position = "fixed", e4.style.width = "1px", e4.style.height = "1px", e4.style.top = "-1px", e4.style.overflow = "hidden", e4;
        }();
        document.addEventListener("DOMContentLoaded", () => {
          document.body.appendChild(h);
        });
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.defaultOptions = void 0;
        var n, o = r3(36), i = (n = o) && n.__esModule ? n : { default: n };
        t3.default = i.default, t3.defaultOptions = o.defaultOptions;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.DraggableDestroyEvent = t3.DraggableInitializedEvent = t3.DraggableEvent = void 0;
        var n, o = r3(3), i = (n = o) && n.__esModule ? n : { default: n };
        class s extends i.default {
          get draggable() {
            return this.data.draggable;
          }
        }
        t3.DraggableEvent = s, s.type = "draggable";
        class a extends s {
        }
        t3.DraggableInitializedEvent = a, a.type = "draggable:initialize";
        class l extends s {
        }
        t3.DraggableDestroyEvent = l, l.type = "draggable:destroy";
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.DragStopEvent = t3.DragPressureEvent = t3.DragOutContainerEvent = t3.DragOverContainerEvent = t3.DragOutEvent = t3.DragOverEvent = t3.DragMoveEvent = t3.DragStartEvent = t3.DragEvent = void 0;
        var n, o = r3(3), i = (n = o) && n.__esModule ? n : { default: n };
        class s extends i.default {
          get source() {
            return this.data.source;
          }
          get originalSource() {
            return this.data.originalSource;
          }
          get mirror() {
            return this.data.mirror;
          }
          get sourceContainer() {
            return this.data.sourceContainer;
          }
          get sensorEvent() {
            return this.data.sensorEvent;
          }
          get originalEvent() {
            return this.sensorEvent ? this.sensorEvent.originalEvent : null;
          }
        }
        t3.DragEvent = s, s.type = "drag";
        class a extends s {
        }
        t3.DragStartEvent = a, a.type = "drag:start", a.cancelable = true;
        class l extends s {
        }
        t3.DragMoveEvent = l, l.type = "drag:move";
        class c extends s {
          get overContainer() {
            return this.data.overContainer;
          }
          get over() {
            return this.data.over;
          }
        }
        t3.DragOverEvent = c, c.type = "drag:over", c.cancelable = true;
        class u extends s {
          get overContainer() {
            return this.data.overContainer;
          }
          get over() {
            return this.data.over;
          }
        }
        t3.DragOutEvent = u, u.type = "drag:out";
        class d extends s {
          get overContainer() {
            return this.data.overContainer;
          }
        }
        t3.DragOverContainerEvent = d, d.type = "drag:over:container";
        class g extends s {
          get overContainer() {
            return this.data.overContainer;
          }
        }
        t3.DragOutContainerEvent = g, g.type = "drag:out:container";
        class h extends s {
          get pressure() {
            return this.data.pressure;
          }
        }
        t3.DragPressureEvent = h, h.type = "drag:pressure";
        class f extends s {
        }
        t3.DragStopEvent = f, f.type = "drag:stop";
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(8);
        Object.keys(n).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return n[e4];
          } });
        });
        var o = r3(7);
        Object.keys(o).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return o[e4];
          } });
        });
        var i = r3(6);
        Object.keys(i).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return i[e4];
          } });
        });
        var s = r3(5);
        Object.keys(s).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return s[e4];
          } });
        });
        var a, l = r3(12), c = (a = l) && a.__esModule ? a : { default: a };
        t3.default = c.default;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n, o = Object.assign || function(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r4 = arguments[t4];
            for (var n2 in r4)
              Object.prototype.hasOwnProperty.call(r4, n2) && (e4[n2] = r4[n2]);
          }
          return e4;
        }, i = r3(40), s = (n = i) && n.__esModule ? n : { default: n }, a = r3(9);
        const l = Symbol("onDragStart"), c = Symbol("onDragOverContainer"), u = Symbol("onDragOver"), d = Symbol("onDragStop"), g = { "sortable:sorted": function({ dragEvent: e4 }) {
          const t4 = e4.source.textContent.trim() || e4.source.id || "sortable element";
          if (e4.over) {
            const r4 = e4.over.textContent.trim() || e4.over.id || "sortable element";
            return e4.source.compareDocumentPosition(e4.over) & Node.DOCUMENT_POSITION_FOLLOWING ? `Placed ${t4} after ${r4}` : `Placed ${t4} before ${r4}`;
          }
          return `Placed ${t4} into a different container`;
        } };
        class h extends s.default {
          constructor(e4 = [], t4 = {}) {
            super(e4, o({}, t4, { announcements: o({}, g, t4.announcements || {}) })), this.startIndex = null, this.startContainer = null, this[l] = this[l].bind(this), this[c] = this[c].bind(this), this[u] = this[u].bind(this), this[d] = this[d].bind(this), this.on("drag:start", this[l]).on("drag:over:container", this[c]).on("drag:over", this[u]).on("drag:stop", this[d]);
          }
          destroy() {
            super.destroy(), this.off("drag:start", this[l]).off("drag:over:container", this[c]).off("drag:over", this[u]).off("drag:stop", this[d]);
          }
          index(e4) {
            return this.getDraggableElementsForContainer(e4.parentNode).indexOf(e4);
          }
          [l](e4) {
            this.startContainer = e4.source.parentNode, this.startIndex = this.index(e4.source);
            const t4 = new a.SortableStartEvent({ dragEvent: e4, startIndex: this.startIndex, startContainer: this.startContainer });
            this.trigger(t4), t4.canceled() && e4.cancel();
          }
          [c](e4) {
            if (e4.canceled())
              return;
            const { source: t4, over: r4, overContainer: n2 } = e4, o2 = this.index(t4), i2 = new a.SortableSortEvent({ dragEvent: e4, currentIndex: o2, source: t4, over: r4 });
            if (this.trigger(i2), i2.canceled())
              return;
            const s2 = v({ source: t4, over: r4, overContainer: n2, children: this.getDraggableElementsForContainer(n2) });
            if (!s2)
              return;
            const { oldContainer: l2, newContainer: c2 } = s2, u2 = this.index(e4.source), d2 = new a.SortableSortedEvent({ dragEvent: e4, oldIndex: o2, newIndex: u2, oldContainer: l2, newContainer: c2 });
            this.trigger(d2);
          }
          [u](e4) {
            if (e4.over === e4.originalSource || e4.over === e4.source)
              return;
            const { source: t4, over: r4, overContainer: n2 } = e4, o2 = this.index(t4), i2 = new a.SortableSortEvent({ dragEvent: e4, currentIndex: o2, source: t4, over: r4 });
            if (this.trigger(i2), i2.canceled())
              return;
            const s2 = v({ source: t4, over: r4, overContainer: n2, children: this.getDraggableElementsForContainer(n2) });
            if (!s2)
              return;
            const { oldContainer: l2, newContainer: c2 } = s2, u2 = this.index(t4), d2 = new a.SortableSortedEvent({ dragEvent: e4, oldIndex: o2, newIndex: u2, oldContainer: l2, newContainer: c2 });
            this.trigger(d2);
          }
          [d](e4) {
            const t4 = new a.SortableStopEvent({ dragEvent: e4, oldIndex: this.startIndex, newIndex: this.index(e4.source), oldContainer: this.startContainer, newContainer: e4.source.parentNode });
            this.trigger(t4), this.startIndex = null, this.startContainer = null;
          }
        }
        function f(e4) {
          return Array.prototype.indexOf.call(e4.parentNode.children, e4);
        }
        function v({ source: e4, over: t4, overContainer: r4, children: n2 }) {
          const o2 = !n2.length, i2 = e4.parentNode !== r4, s2 = t4 && !i2;
          return o2 ? function(e5, t5) {
            const r5 = e5.parentNode;
            return t5.appendChild(e5), { oldContainer: r5, newContainer: t5 };
          }(e4, r4) : s2 ? function(e5, t5) {
            const r5 = f(e5), n3 = f(t5);
            return r5 < n3 ? e5.parentNode.insertBefore(e5, t5.nextElementSibling) : e5.parentNode.insertBefore(e5, t5), { oldContainer: e5.parentNode, newContainer: e5.parentNode };
          }(e4, t4) : i2 ? function(e5, t5, r5) {
            const n3 = e5.parentNode;
            return t5 ? t5.parentNode.insertBefore(e5, t5) : r5.appendChild(e5), { oldContainer: n3, newContainer: e5.parentNode };
          }(e4, t4, r4) : null;
        }
        t3.default = h;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = Object.assign || function(e4) {
          for (var t4 = 1; t4 < arguments.length; t4++) {
            var r4 = arguments[t4];
            for (var n2 in r4)
              Object.prototype.hasOwnProperty.call(r4, n2) && (e4[n2] = r4[n2]);
          }
          return e4;
        };
        const o = Symbol("canceled");
        class i {
          constructor(e4) {
            this[o] = false, this.data = e4;
          }
          get type() {
            return this.constructor.type;
          }
          get cancelable() {
            return this.constructor.cancelable;
          }
          cancel() {
            this[o] = true;
          }
          canceled() {
            return Boolean(this[o]);
          }
          clone(e4) {
            return new this.constructor(n({}, this.data, e4));
          }
        }
        t3.default = i, i.type = "event", i.cancelable = false;
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true }), t3.SortableStopEvent = t3.SortableSortedEvent = t3.SortableSortEvent = t3.SortableStartEvent = t3.SortableEvent = void 0;
        var n, o = r3(3), i = (n = o) && n.__esModule ? n : { default: n };
        class s extends i.default {
          get dragEvent() {
            return this.data.dragEvent;
          }
        }
        t3.SortableEvent = s, s.type = "sortable";
        class a extends s {
          get startIndex() {
            return this.data.startIndex;
          }
          get startContainer() {
            return this.data.startContainer;
          }
        }
        t3.SortableStartEvent = a, a.type = "sortable:start", a.cancelable = true;
        class l extends s {
          get currentIndex() {
            return this.data.currentIndex;
          }
          get over() {
            return this.data.oldIndex;
          }
          get overContainer() {
            return this.data.newIndex;
          }
        }
        t3.SortableSortEvent = l, l.type = "sortable:sort", l.cancelable = true;
        class c extends s {
          get oldIndex() {
            return this.data.oldIndex;
          }
          get newIndex() {
            return this.data.newIndex;
          }
          get oldContainer() {
            return this.data.oldContainer;
          }
          get newContainer() {
            return this.data.newContainer;
          }
        }
        t3.SortableSortedEvent = c, c.type = "sortable:sorted";
        class u extends s {
          get oldIndex() {
            return this.data.oldIndex;
          }
          get newIndex() {
            return this.data.newIndex;
          }
          get oldContainer() {
            return this.data.oldContainer;
          }
          get newContainer() {
            return this.data.newContainer;
          }
        }
        t3.SortableStopEvent = u, u.type = "sortable:stop";
      }, function(e3, t3, r3) {
        Object.defineProperty(t3, "__esModule", { value: true });
        var n = r3(9);
        Object.keys(n).forEach(function(e4) {
          "default" !== e4 && "__esModule" !== e4 && Object.defineProperty(t3, e4, { enumerable: true, get: function() {
            return n[e4];
          } });
        });
        var o, i = r3(41), s = (o = i) && o.__esModule ? o : { default: o };
        t3.default = s.default;
      }]);
    }, e2.exports = r2();
  }), r = (e = t) && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default") ? e.default : e;
  if (void 0 === window.Livewire)
    throw "Livewire Sortable Plugin: window.Livewire is undefined. Make sure @livewireScripts is placed above this script include";
  window.Livewire.directive("sortable-group", ({ el: e2, directive: t2, component: n }) => {
    if (t2.modifiers.includes("item-group") && e2.closest("[wire\\:sortable-group]").livewire_sortable.addContainer(e2), t2.modifiers.length > 0)
      return;
    let o = { draggable: "[wire\\:sortable-group\\.item]" };
    e2.querySelector("[wire\\:sortable-group\\.handle]") && (o.handle = "[wire\\:sortable-group\\.handle]"), (e2.livewire_sortable = new r([], o)).on("sortable:stop", () => {
      setTimeout(() => {
        let r2 = [];
        e2.querySelectorAll("[wire\\:sortable-group\\.item-group]").forEach((e3, t3) => {
          let n2 = [];
          e3.querySelectorAll("[wire\\:sortable-group\\.item]").forEach((e4, t4) => {
            n2.push({ order: t4 + 1, value: e4.getAttribute("wire:sortable-group.item") });
          }), r2.push({ order: t3 + 1, value: e3.getAttribute("wire:sortable-group.item-group"), items: n2 });
        }), n.$wire.call(t2.method, r2);
      }, 1);
    });
  }), window.Livewire.directive("sortable", ({ el: e2, directive: t2, component: n }) => {
    if (t2.modifiers.length > 0)
      return;
    let o = { draggable: "[wire\\:sortable\\.item]" };
    e2.querySelector("[wire\\:sortable\\.handle]") && (o.handle = "[wire\\:sortable\\.handle]"), new r(e2, o).on("sortable:stop", () => {
      setTimeout(() => {
        let r2 = [];
        e2.querySelectorAll("[wire\\:sortable\\.item]").forEach((e3, t3) => {
          r2.push({ order: t3 + 1, value: e3.getAttribute("wire:sortable.item") });
        }), n.$wire.call(t2.method, r2);
      }, 1);
    });
  });
});
//# sourceMappingURL=livewire-sortable.js.map
